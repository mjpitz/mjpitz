gitea:
  enabled: true

  image:
    tag: nightly

  securityContext:
    runAsUser: 1000
    runAsGroup: 1000

  podSecurityContext:
    fsGroup: 1000

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "0m"
      external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
    hosts:
      - host: code.pitz.tech
    tls:
      - secretName: gitea-tls
        hosts:
          - code.pitz.tech

  persistence:
    blobs:
      enabled: false
      storageClass: longhorn

    git:
      enabled: true
      storageClass: longhorn

    # sqlite
    enabled: true
    storageClass: longhorn

  metrics:
    enabled: false
    serviceMonitor:
      enabled: false

  config:
    repository:
      overrides:
        DISABLE_STARS: true
        DEFAULT_BRANCH: main

    ui:
      overrides:
        DEFAULT_THEME: gitea-dark
        USE_SERVICE_WORKER: true

    server:
      overrides:
        DISABLE_SSH: true

    service:
      overrides:
        DISABLE_REGISTRATION: true

      explore:
        overrides:
          DISABLE_USERS_PAGE: false

    security:
      installLock: true

    email:
      host: mx.pitz.tech
      from: "Gitea <gitea@pitz.tech>"

    blobs:
      endpoint: nyc3.digitaloceanspaces.com
      bucket: mya-gitea
      region: nyc3
      useSSL: true

    webhook:
      allowed:
        - "*.vcs.svc.cluster.local"

  # -- Backup the database using litestream.
  litestream:
    enabled: true

    securityContext:
      runAsUser: 1000
      runAsGroup: 1000

    metrics:
      enabled: false
      serviceMonitor:
        enabled: false

    config:
      dbs:
        - path: /data/gitea/gitea.db
          replicas:
            - type: s3
              bucket: mya-gitea
              path: litestream/
              endpoint: nyc3.digitaloceanspaces.com
              region: nyc3

  # -- Use Redis-backed queues.
  redis-queue:
    enabled: true

    persistence:
      enabled: true
      storageClass: longhorn

    metrics:
      serviceMonitor:
        enabled: false

  # -- Cache data in redis.
  redis:
    enabled: true

    metrics:
      serviceMonitor:
        enabled: false
