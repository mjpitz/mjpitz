registry:
  replicaCount: 1

  image:
    repository: ghcr.io/mniewrzal/distribution
    tag: 0.1

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    hosts:
      - host: proxy.pitz.tech
    tls:
      - secretName: storj-registry-tls
        hosts:
          - proxy.pitz.tech

  extraVolumes:
    - name: token-cert
      secret:
        secretName: storj-registry-auth-token-cert

  extraVolumeMounts:
    - name: token-cert
      mountPath: /etc/docker/auth/token
      readOnly: true

  metrics:
    serviceMonitor:
      enabled: true

  config:
    storage:
      maintenance:
        uploadpurging:
          enabled: false
    proxy:
      remoteurl: "https://registry-1.docker.io/"

  auth:
    enabled: true
    replicaCount: 1

    extraVolumes:
      - name: token-cert
        secret:
          secretName: storj-registry-auth-token-cert

    extraVolumeMounts:
      - name: token-cert
        mountPath: /etc/docker/auth/token
        readOnly: true

    config:
      token:
        autoRedirect: true
        realm: "https://proxy.pitz.tech/auth"
        service: "proxy.pitz.tech"
        issuer: "Registry Auth"
        certificate: "/etc/docker/auth/token/tls.crt"
        key: "/etc/docker/auth/token/tls.key"
      acl:
        - actions: [ "*" ]
          comment: Admin can do it all
          match: { account: admin }
        - actions: [ "*" ]
          comment: The web user can query the api
          match: { account: "web" }
        - actions: [ "pull" ]
          comment: Anonymous users can pull depscloud
          match: { account: "", name: depscloud/* }
        - actions: [ "pull" ]
          comment: Anonymous users can pull mjpitz
          match: { account: "", name: mjpitz/* }

  redis:
    enabled: true
    replicaCount: 2

    metrics:
      serviceMonitor:
        enabled: true

  ui:
    enabled: true
    config:
      domain: proxy.pitz.tech
