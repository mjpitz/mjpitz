# Default values for registry.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

metrics:
  serviceMonitor:
    enabled: false
    interval: 10s

extraVolumes: []
#  - name: data
#    emptyDir: {}

extraVolumeMounts: []
#  - name: data
#    mountPath: /var/lib/registry
#    readOnly: false

externalConfig:
  secretRef:
    name: ""

# https://docs.docker.com/registry/configuration/#list-of-configuration-options
config:
  log:
    accesslog:
      disabled: true
    level: info
    formatter: json

  # -- Configures the persistence layer. This layer does not
  storage: {}
#    filesystem:
#      rootdirectory: /var/lib/registry
#      maxthreads: 100
#    azure:
#      accountname: accountname
#      accountkey: base64encodedaccountkey
#      container: containername
#    gcs:
#      bucket: bucketname
#      keyfile: /path/to/keyfile
#      credentials:
#        type: service_account
#        project_id: project_id_string
#        private_key_id: private_key_id_string
#        private_key: private_key_string
#        client_email: client@example.com
#        client_id: client_id_string
#        auth_uri: http://example.com/auth_uri
#        token_uri: http://example.com/token_uri
#        auth_provider_x509_cert_url: http://example.com/provider_cert_url
#        client_x509_cert_url: http://example.com/client_cert_url
#      rootdirectory: /gcs/object/name/prefix
#      chunksize: 5242880
#    s3:
#      accesskey: awsaccesskey
#      secretkey: awssecretkey
#      region: us-west-1
#      regionendpoint: http://myobjects.local
#      bucket: bucketname
#      encrypt: true
#      keyid: mykeyid
#      secure: true
#      v4auth: true
#      chunksize: 5242880
#      multipartcopychunksize: 33554432
#      multipartcopymaxconcurrency: 100
#      multipartcopythresholdsize: 33554432
#      rootdirectory: /s3/object/name/prefix
#    swift:
#      username: username
#      password: password
#      authurl: https://storage.myprovider.com/auth/v1.0 or https://storage.myprovider.com/v2.0 or https://storage.myprovider.com/v3/auth
#      tenant: tenantname
#      tenantid: tenantid
#      domain: domain name for Openstack Identity v3 API
#      domainid: domain id for Openstack Identity v3 API
#      insecureskipverify: true
#      region: fr
#      container: containername
#      rootdirectory: /swift/object/name/prefix
#    oss:
#      accesskeyid: accesskeyid
#      accesskeysecret: accesskeysecret
#      region: OSS region name
#      endpoint: optional endpoints
#      internal: optional internal endpoint
#      bucket: OSS bucket
#      encrypt: optional data encryption setting
#      secure: optional ssl setting
#      chunksize: optional size valye
#      rootdirectory: optional root directory
#    inmemory: {} # This driver takes no parameters
#    delete:
#      enabled: false
#    redirect:
#      disable: false
#    maintenance:
#      uploadpurging:
#        enabled: true
#        age: 168h
#        interval: 24h
#        dryrun: false
#      readonly:
#        enabled: false

  middleware: {}
#    registry:
#      - name: ARegistryMiddleware
#        options:
#          foo: bar
#    repository:
#      - name: ARepositoryMiddleware
#        options:
#          foo: bar
#    storage:
#      - name: cloudfront
#        options:
#          baseurl: https://my.cloudfronted.domain.com/
#          privatekey: /path/to/pem
#          keypairid: cloudfrontkeypairid
#          duration: 3000s
#          ipfilteredby: awsregion
#          awsregion: us-east-1, use-east-2
#          updatefrenquency: 12h
#          iprangesurl: https://ip-ranges.amazonaws.com/ip-ranges.json
#    storage:
#      - name: redirect
#        options:
#          baseurl: https://example.com/

  reporting: {}
#    bugsnag:
#      apikey: bugsnagapikey
#      releasestage: bugsnagreleasestage
#      endpoint: bugsnagendpoint
#    newrelic:
#      licensekey: newreliclicensekey
#      name: newrelicname
#      verbose: true

  http:
    secret: ""

  notifications: {}
#    events:
#      includereferences: true
#    endpoints:
#      - name: alistener
#        disabled: false
#        url: https://my.listener.com/event
#        headers: <http.Header>
#        timeout: 1s
#        threshold: 10
#        backoff: 1s
#        ignoredmediatypes:
#          - application/octet-stream
#        ignore:
#          mediatypes:
#            - application/octet-stream
#          actions:
#            - pull

  proxy: {}
#    remoteurl: https://registry-1.docker.io
#    username: [ username ]
#    password: [ password ]

  compatibility: {}
#    schema1:
#      signingkeyfile: /etc/registry/key.json
#      enabled: true

  validation: {}
#    manifests:
#      urls:
#        allow:
#          - ^https?://([^/]+\.)*example\.com/
#        deny:
#          - ^https?://www\.example\.com/

auth:
  enabled: false

  config:
    token:
      realm: ""
      service: ""

redis:
  enabled: false

  config:
    db: 0
    dialtimeout: 200ms
    readtimeout: 200ms
    writetimeout: 200ms
    pool:
      maxidle: 16
      maxactive: 64
      idletimeout: 300s

ghpages:
  # - when enabled, the / request on the ingress will route to GitHub pages.
  enabled: false
  ips:
    - 185.199.111.153
    - 185.199.110.153
    - 185.199.109.153
    - 185.199.108.153
